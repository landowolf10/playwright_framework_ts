version: 2.1

jobs:
  build:
    machine: true   # Necesario para usar docker build/run
    working_directory: ~/repo

    steps:
      - checkout

      # Construir imagen Docker personalizada
      - run:
          name: Build Docker image
          command: docker build -t playwright-tests .

      # Ejecutar tests dentro del contenedor
      - run:
          name: Run Playwright Tests in Docker
          command: |
            docker run --rm \
              -v $(pwd)/reports:/app/reports \
              -v $(pwd)/src:/app/src \
              playwright-tests

      # Guardar artifacts (HTML + Allure)
      - store_artifacts:
          path: ./reports/html
          destination: playwright-html-report

      - store_artifacts:
          path: ./reports/allure-results
          destination: playwright-allure-results

      # Guardar resultados de test (JUnit para CircleCI)
      - store_test_results:
          path: ./reports/junit

      # Publicar link directo al reporte HTML en el Job Summary
      - run:
          name: Publish Playwright Report URL
          command: |
            echo "Fetching artifact URL for Playwright report..."

            # Llamar a la API de CircleCI para obtener artifacts de este build
            ARTIFACT_URL=$(curl -s -H "Circle-Token: $CIRCLE_TOKEN" \
              "https://circleci.com/api/v2/project/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BUILD_NUM}/artifacts" \
              | jq -r '.items[] | select(.path | endswith("playwright-html-report/index.html")) | .url')

            if [ -z "$ARTIFACT_URL" ]; then
              echo "❌ No se encontró el artifact del reporte."
              exit 1
            fi

            echo "✅ Playwright report disponible aquí: $ARTIFACT_URL"

workflows:
  version: 2
  build-test:
    jobs:
      - build
