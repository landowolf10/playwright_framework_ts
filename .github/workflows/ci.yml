name: Playwright Tests (Docker + Pages)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # üëà ejecutar manualmente tambi√©n

jobs:
  test:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      # 1. Build Docker image desde tu Dockerfile
      - name: Build Playwright Docker image
        run: docker build -t playwright-tests .

      # 2. Run tests dentro del contenedor
      - name: Run Playwright tests in Docker
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/reports:/app/reports \
            -v ${{ github.workspace }}/test-results:/app/test-results \
            playwright-tests

      # 3. Subir reportes como artifact (descargable desde GitHub Actions)
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: reports/html
          retention-days: 30

      # 4. Guardar el reporte en carpeta con timestamp + latest
      - name: Prepare report folders
        if: always()
        run: |
          TIMESTAMP=$(date +"%Y-%m-%d_%H-%M")
          mkdir -p "reports-history/$TIMESTAMP"
          cp -r reports/html/* "reports-history/$TIMESTAMP/"

          # crear carpeta latest (siempre reemplazada por el √∫ltimo run)
          rm -rf reports-history/latest
          mkdir -p reports-history/latest
          cp -r reports/html/* reports-history/latest/

          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

      # 5. Generar index.html con links a cada ejecuci√≥n
      - name: Generate index.html
        if: always()
        run: |
          INDEX_FILE="reports-history/index.html"

          echo "<!DOCTYPE html>" > $INDEX_FILE
          echo "<html lang='en'><head><meta charset='UTF-8'><title>Playwright Reports</title></head><body>" >> $INDEX_FILE
          echo "<h1>Historial de Playwright Reports</h1>" >> $INDEX_FILE
          echo "<ul>" >> $INDEX_FILE

          # Link al √∫ltimo reporte
          echo "<li><a href='latest/index.html'>√öltimo reporte</a></li>" >> $INDEX_FILE

          # Listar todos los timestamps (ordenados descendente)
          for d in $(ls -d reports-history/*/ | grep -v 'latest' | sort -r); do
            NAME=$(basename $d)
            echo "<li><a href='$NAME/index.html'>$NAME</a></li>" >> $INDEX_FILE
          done

          echo "</ul></body></html>" >> $INDEX_FILE

      # 6. Publicar en GitHub Pages
      - name: Upload report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: reports-history
          publish_branch: gh-pages
